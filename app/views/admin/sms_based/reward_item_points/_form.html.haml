= render :partial => "share/messages", :locals => {:type => :alert, :message => @reward_item_point.errors.full_messages}

= form_for [:admin, :sms_based, @reward_item_point], :html => {:class => 'form-horizontal'} do |f|
  .fields-group
    %h3 Product Pack Details
    = render "admin/share/select_msp", f: @reward_item_point && @reward_item_point.reward_item && @reward_item_point.reward_item.client
    .control-group
      = label_tag :client, 'Client', :class => 'control-label'
      .controls
        - if @reward_item_point.new_record?
          = select_tag :client, options_for_select(Client.accessible_by(current_ability).select_options.is_sms_based.map(&:option_format), params[:client]), prompt: 'Please Select', :class => 'al-selector-init al-client-content-loader', :data => {:url => list_options_admin_user_management_msps_url(slug: 'Client:client_name', sms_based: true)}
        - else
          = @reward_item_point.reward_item.client.client_name
    .control-group
      = label_tag :scheme, 'Scheme', :class => 'control-label'
      .controls
        - if @reward_item_point.new_record?
          = select_tag :scheme, options_for_select(Scheme.accessible_by(current_ability).select_options.map{|s|[s.name, s.id, {'data-parent' => s.client_id}]}, params[:scheme]), prompt: 'Please Select', :class => 'al-content-loader', :data => {:url => list_for_client_admin_schemes_url}
        - else
          = @reward_item_point.reward_item.scheme.name
    .control-group
      = f.label :reward_item_id, 'Product', :class => 'control-label mandatory-field'
      .controls
        - if @reward_item_point.new_record?
          = f.collection_select :reward_item_id, RewardItem.accessible_by(current_ability).select([:id, :name]), :id, :name, {:include_blank => 'Please Select'}, :class => 's-pp-content-loader tc-widget', 'data-target' => '#reward-item-point-actn', :data => {:url => list_for_scheme_admin_sms_based_reward_items_url}
        - else
          = @reward_item_point.reward_item.name

    .control-group
      = f.label :pack_size, :class => 'control-label mandatory-field'
      .controls
        = f.text_field :pack_size
    .control-group
      = f.label :metric, :class => 'control-label mandatory-field'
      .controls
        = f.select :metric,  RewardItemPoint::Metric::ALL.collect {|metric| [metric.upcase, metric]}, {:include_blank => 'Please Select'}, :class => 'input-s-medium'
    .control-group
      = f.label :points, :class => 'control-label mandatory-field'
      .controls
        = f.text_field :points
    .control-group
      = f.label :status, :class => 'control-label'
      .controls
        = f.select :status, RewardItemPoint::Status::ALL.collect {|status| [status.titleize, status]}, {}, {:class => 'input-s-medium'}

  .control-group
    .controls
      = link_to 'Cancel', admin_sms_based_reward_item_points_path, :class=> "btn"
      %span#reward-item-point-actn= f.button @reward_item_point.id.nil? ? "Create Product Pack" : "Save Product Pack", :class => 'btn btn-info'
